/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SmtDistributor } from "../SmtDistributor";

export class SmtDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SmtDistributor> {
    return super.deploy(_token, overrides || {}) as Promise<SmtDistributor>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): SmtDistributor {
    return super.attach(address) as SmtDistributor;
  }
  connect(signer: Signer): SmtDistributor__factory {
    return super.connect(signer) as SmtDistributor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmtDistributor {
    return new Contract(address, _abi, signerOrProvider) as SmtDistributor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SmtDistributor.Share[]",
        name: "shares",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "depositShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a75380380610a7583398101604081905261002f916100db565b60006100396100d7565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166100b25760405162461bcd60e51b81526004016100a990610109565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610140565b3390565b6000602082840312156100ec578081fd5b81516001600160a01b0381168114610102578182fd5b9392505050565b60208082526019908201527f746f6b656e20697320746865207a65726f206164647265737300000000000000604082015260600190565b6109268061014f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ca578063a9b33213146100df578063f2fde38b146100f2578063fc0c546a146101055761007d565b806301567739146100825780634e71d92d146100ab578063715018a6146100c0575b600080fd5b610095610090366004610668565b61010d565b6040516100a2919061089d565b60405180910390f35b6100b361011f565b6040516100a291906107d6565b6100c8610277565b005b6100d2610335565b6040516100a29190610785565b6100b36100ed366004610689565b610344565b6100c8610100366004610668565b610525565b6100d2610639565b60026020526000908152604090205481565b6000806002600061012e610648565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905060006002600061015f610648565b6001600160a01b03168152602081019190915260400160002055610181610648565b6001600160a01b03167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4826040516101b9919061089d565b60405180910390a26001546001600160a01b031663a9059cbb6101da610648565b836040518363ffffffff1660e01b81526004016101f89291906107bd565b602060405180830381600087803b15801561021257600080fd5b505af1158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a9190610765565b61026f5760405162461bcd60e51b8152600401610266906107e1565b60405180910390fd5b600191505090565b61027f610648565b6001600160a01b0316610290610335565b6001600160a01b0316146102eb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600061034e610648565b6001600160a01b031661035f610335565b6001600160a01b0316146103ba576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600082116103da5760405162461bcd60e51b815260040161026690610870565b60008351116103fb5760405162461bcd60e51b815260040161026690610839565b6001546001600160a01b03166323b872dd610414610648565b30856040518463ffffffff1660e01b815260040161043493929190610799565b602060405180830381600087803b15801561044e57600080fd5b505af1158015610462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104869190610765565b6104a25760405162461bcd60e51b8152600401610266906107e1565b6000805b84518110156104fb5760008582815181106104bd57fe5b6020908102919091018101518082015190516001600160a01b03166000908152600290925260409091208054820190559290920191506001016104a6565b5082811461051b5760405162461bcd60e51b81526004016102669061080a565b5060019392505050565b61052d610648565b6001600160a01b031661053e610335565b6001600160a01b031614610599576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105de5760405162461bcd60e51b81526004018080602001828103825260268152602001806108cb6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b3390565b80356001600160a01b038116811461066357600080fd5b919050565b600060208284031215610679578081fd5b6106828261064c565b9392505050565b600080604080848603121561069c578182fd5b833567ffffffffffffffff808211156106b3578384fd5b818601915086601f8301126106c6578384fd5b81356020828211156106d457fe5b6106e181828402016108a6565b82815281810190858301878502870184018c10156106fd578889fd5b8896505b848710156107535787818d031215610717578889fd5b8751888101818110888211171561072a57fe5b89526107358261064c565b81528185013585820152835260019690960195918301918701610701565b509a9890910135985050505050505050565b600060208284031215610776578081fd5b81518015158114610682578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252601590820152740e8dee8c2d840c2dadeeadce840dad2e6dac2e8c6d605b1b604082015260600190565b60208082526017908201527f7368617265732063616e206e6f7420626520656d707479000000000000000000604082015260600190565b602080825260139082015272746f74616c416d6f756e74206973207a65726f60681b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff811182821017156108c257fe5b60405291905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220fcb5d578f3a4c1ba494220f0469ea41ad186af17f5743132901102a61e7b873164736f6c63430007060033";
