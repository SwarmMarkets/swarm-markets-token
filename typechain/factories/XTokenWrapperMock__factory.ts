/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { XTokenWrapperMock } from "../XTokenWrapperMock";

export class XTokenWrapperMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XTokenWrapperMock> {
    return super.deploy(overrides || {}) as Promise<XTokenWrapperMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): XTokenWrapperMock {
    return super.attach(address) as XTokenWrapperMock;
  }
  connect(signer: Signer): XTokenWrapperMock__factory {
    return super.connect(signer) as XTokenWrapperMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XTokenWrapperMock {
    return new Contract(address, _abi, signerOrProvider) as XTokenWrapperMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "xToken",
        type: "address",
      },
    ],
    name: "setTokenToXToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToXToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610122806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630589f45d14603757806327009c75146064575b600080fd5b606260048036036040811015604b57600080fd5b506001600160a01b038135811691602001351660a3565b005b608760048036036020811015607857600080fd5b50356001600160a01b031660d1565b604080516001600160a01b039092168252519081900360200190f35b6001600160a01b03918216600090815260208190526040902080546001600160a01b03191691909216179055565b6000602081905290815260409020546001600160a01b03168156fea2646970667358221220dce9abe951c732b21bd734addcad4e1f6185339ff68f9981737281b506160a2764736f6c63430007060033";
