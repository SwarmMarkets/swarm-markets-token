/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SmtPriceFeed } from "../SmtPriceFeed";

export class SmtPriceFeed__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _registry: string,
    _eurPriceFeed: string,
    _smt: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SmtPriceFeed> {
    return super.deploy(
      _registry,
      _eurPriceFeed,
      _smt,
      overrides || {}
    ) as Promise<SmtPriceFeed>;
  }
  getDeployTransaction(
    _registry: string,
    _eurPriceFeed: string,
    _smt: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registry,
      _eurPriceFeed,
      _smt,
      overrides || {}
    );
  }
  attach(address: string): SmtPriceFeed {
    return super.attach(address) as SmtPriceFeed;
  }
  connect(signer: Signer): SmtPriceFeed__factory {
    return super.connect(signer) as SmtPriceFeed__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmtPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as SmtPriceFeed;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_eurPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_smt",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "eurPriceFeed",
        type: "address",
      },
    ],
    name: "EurPriceFeedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "RegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "smt",
        type: "address",
      },
    ],
    name: "SmtSet",
    type: "event",
  },
  {
    inputs: [],
    name: "eurPriceFeed",
    outputs: [
      {
        internalType: "contract IEurPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IBRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eurPriceFeed",
        type: "address",
      },
    ],
    name: "setEurPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_smt",
        type: "address",
      },
    ],
    name: "setSmt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "smt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a91380380610a9183398101604081905261002f9161024c565b60006100396100a6565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061008c836100aa565b61009582610132565b61009e816101b1565b505050610345565b3390565b6001600160a01b0381166100d95760405162461bcd60e51b81526004016100d0906102d7565b60405180910390fd5b7f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b81604051610108919061028e565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166101585760405162461bcd60e51b81526004016100d0906102a2565b7f1870035ee2b4467ef5006d1f683f416847a3836a4a02ed0a665f3f0d058bc7ec81604051610187919061028e565b60405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166101d75760405162461bcd60e51b81526004016100d09061030e565b7f3bd0b9e428705617bd1a2f560516b297871688302c37da0d1bc80471ead9ab1281604051610206919061028e565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b038116811461024757600080fd5b919050565b600080600060608486031215610260578283fd5b61026984610230565b925061027760208501610230565b915061028560408501610230565b90509250925092565b6001600160a01b0391909116815260200190565b6020808252818101527f65757250726963654665656420697320746865207a65726f2061646472657373604082015260600190565b6020808252601c908201527f726567697374727920697320746865207a65726f206164647265737300000000604082015260600190565b60208082526017908201527f736d7420697320746865207a65726f2061646472657373000000000000000000604082015260600190565b61073d806103546000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100db5780639b00f17f146100e3578063a91ee0dc146100f6578063e7592c6014610109578063f2fde38b1461011157610093565b80634ba5a195146100985780635e45a060146100ad578063715018a6146100cb5780637b103999146100d3575b600080fd5b6100ab6100a63660046105dc565b610124565b005b6100b5610192565b6040516100c2919061060a565b60405180910390f35b6100ab6101a1565b6100b561024d565b6100b561025c565b6100ab6100f13660046105dc565b61026b565b6100ab6101043660046105dc565b6102d6565b6100b5610341565b6100ab61011f3660046105dc565b610350565b61012c610452565b6001600160a01b031661013d61025c565b6001600160a01b031614610186576040805162461bcd60e51b815260206004820181905260248201526000805160206106e8833981519152604482015290519081900360640190fd5b61018f81610456565b50565b6003546001600160a01b031681565b6101a9610452565b6001600160a01b03166101ba61025c565b6001600160a01b031614610203576040805162461bcd60e51b815260206004820181905260248201526000805160206106e8833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b6000546001600160a01b031690565b610273610452565b6001600160a01b031661028461025c565b6001600160a01b0316146102cd576040805162461bcd60e51b815260206004820181905260248201526000805160206106e8833981519152604482015290519081900360640190fd5b61018f816104de565b6102de610452565b6001600160a01b03166102ef61025c565b6001600160a01b031614610338576040805162461bcd60e51b815260206004820181905260248201526000805160206106e8833981519152604482015290519081900360640190fd5b61018f8161055d565b6002546001600160a01b031681565b610358610452565b6001600160a01b031661036961025c565b6001600160a01b0316146103b2576040805162461bcd60e51b815260206004820181905260248201526000805160206106e8833981519152604482015290519081900360640190fd5b6001600160a01b0381166103f75760405162461bcd60e51b81526004018080602001828103825260268152602001806106c26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b0381166104855760405162461bcd60e51b815260040161047c9061068a565b60405180910390fd5b7f3bd0b9e428705617bd1a2f560516b297871688302c37da0d1bc80471ead9ab12816040516104b4919061060a565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166105045760405162461bcd60e51b815260040161047c9061061e565b7f1870035ee2b4467ef5006d1f683f416847a3836a4a02ed0a665f3f0d058bc7ec81604051610533919061060a565b60405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166105835760405162461bcd60e51b815260040161047c90610653565b7f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b816040516105b2919061060a565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156105ed578081fd5b81356001600160a01b0381168114610603578182fd5b9392505050565b6001600160a01b0391909116815260200190565b6020808252818101527f65757250726963654665656420697320746865207a65726f2061646472657373604082015260600190565b6020808252601c908201527f726567697374727920697320746865207a65726f206164647265737300000000604082015260600190565b60208082526017908201527f736d7420697320746865207a65726f206164647265737300000000000000000060408201526060019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220eee0118d81ea938a03b02cb1ac0af8849f80bae1661edd6a8665f81103ef4e4664736f6c63430007060033";
